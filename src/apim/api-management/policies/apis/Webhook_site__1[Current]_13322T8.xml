<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
	<inbound>
		<base />
		<validate-azure-ad-token tenant-id="{{JwtTenantId}}" output-token-variable-name="token">
			<client-application-ids>
				<application-id>{{JwtAppId}}</application-id>
			</client-application-ids>
			<audiences>
				<audience>{{JwtAudience}}</audience>
			</audiences>
			<required-claims>
				<claim name="roles" match="all">
					<value>{{JwtRolesValue}}</value>
				</claim>
			</required-claims>
		</validate-azure-ad-token>
		<set-variable name="subValue" value="@(((Jwt)context.Variables["token"]).Subject)" />
		<send-request mode="new" response-variable-name="assertionResponse">
			<set-url>{{SAMLAssertionFuncBaseUrl}}/api/GetSAMLAssertion</set-url>
			<set-method>POST</set-method>
			<set-header name="x-functions-key" exists-action="override">
				<value>{{GetSAMLAssertionFunctionKey}}</value>
			</set-header>
			<set-body>@(new JObject(new JProperty("nameID",(string)context.Variables["subValue"])).ToString())</set-body>
		</send-request>
		<send-request mode="new" response-variable-name="jwtResponse">
			<set-url>{{SAMLAssertionFuncBaseUrl}}/api/ExchangeToken</set-url>
			<set-method>POST</set-method>
			<set-header name="x-functions-key" exists-action="override">
				<value>{{ExchangeTokenFunctionKey}}</value>
			</set-header>
			<set-body>@(new JObject(
                                new JProperty("grant_type","urn:ietf:params:oauth:grant-type:saml2-bearer"),
                                new JProperty("assertion",((IResponse)context.Variables["assertionResponse"]).Body.As<JObject>()["samlAssertionBase64URLEncoded"])
                            ).ToString())</set-body>
		</send-request>
		<set-header name="Authorization" exists-action="override">
			<value>@($"Bearer {((IResponse)context.Variables["jwtResponse"]).Body.As<JObject>()["access_token"]}")</value>
		</set-header>
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>